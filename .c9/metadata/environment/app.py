{"changed":true,"filter":false,"title":"app.py","tooltip":"/app.py","value":"import os\nimport bson, flask\nfrom dns import resolver\nfrom flask import Flask, render_template, redirect, request, url_for, flash, session, abort\nfrom flask_pymongo import PyMongo, pymongo\nfrom pymongo import MongoClient\nfrom flask_bootstrap import Bootstrap\nfrom bson.objectid import ObjectId\nfrom forms import RegistrationForm, LoginForm\nfrom flask_bcrypt import Bcrypt, generate_password_hash, check_password_hash\nfrom datetime import datetime\nfrom flask_login import LoginManager, login_user, login_required, logout_user, current_user\n\n\n\n# app config\n\napp = Flask(__name__)\n\n\n# Mongo Config\n\napp.config[\"MONGO_DBNAME\"] = \"recipes_database\"\napp.config[\"MONGO_URI\"] = \"mongodb+srv://root:1Britney@myprojectcluster-iqnfp.mongodb.net/recipes_database?retryWrites=true&w=majority\"\napp.config[\"SECRET_KEY\"] = os.urandom(24)\n\nmongo = PyMongo(app)\nbcrypt = Bcrypt(app)\nlogin_manager = LoginManager(app)\n\n\n# function to display home page and recent recipe card display\n@app.route('/')\n@app.route('/home')\ndef home():\n    recipe = mongo.db.recipes\n    poprecipes = recipe.find().sort('views', pymongo.DESCENDING).limit(6)\n    return render_template('index.html', recipes=poprecipes)\n    \n    \n                            \n# function to open recipes page\n@app.route('/get_recipes')\ndef get_recipes():\n    recipe = mongo.db.recipes\n    newrecipes = recipe.find().sort('date_created', pymongo.ASCENDING).limit(6)\n    rotmrecipes = recipe.find().sort('likes', pymongo.DESCENDING).limit(1)\n    return render_template('get_recipes.html', recipes=newrecipes, rotmrecipes=rotmrecipes)\n    \n    \n\n# function to view and open the recipe\n@app.route('/view_recipe/<recipe_id>')\ndef view_recipe(recipe_id):\n    recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})\n    recipe_views = mongo.db.recipes   \n    recipe_views.update({'_id': ObjectId(recipe_id)},\n    { '$inc': {'views': 1}})\n    return render_template('view_recipe.html', recipe=recipe)\n    \n\n\n# function to open add recipe page and link the categories select  \n@app.route('/add_recipe')\ndef add_recipe():\n    return render_template('add_recipe.html',\n                            categories=mongo.db.categories.find())\n                            \n    \n                            \n# function to insert recipe in the database\n@app.route('/insert_recipe', methods=['POST'])\ndef insert_recipe():\n    form_data = request.form.to_dict()\n    form_data['datecreated'] = datetime.utcnow()\n    form_data['likes'] = 0\n    form_data['views'] = 0\n    recipes = mongo.db.recipes\n    recipes.insert_one(form_data)\n    flash('Submitted','success')\n    return redirect(url_for('home'))\n    \n    \n    \n# creating function to editing recipes on the web app\n@app.route('/edit_recipe/<recipe_id>')\ndef edit_recipe(recipe_id):\n    the_recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})\n    all_categories = mongo.db.categories.find()\n    return render_template('edit_recipe.html', recipe=the_recipe,\n                            categories=all_categories)\n                            \n    \n                            \n# update function to post recipe after it was edited\n@app.route('/edit_recipe/<recipe_id>', methods=[\"POST\"])\ndef update_recipe(recipe_id):\n    recipes = mongo.db.recipes\n    print(recipes)\n    recipes.update( {'_id': ObjectId(recipe_id)},\n    {'$set':{\n        'title':request.form.get('title'),\n        'description':request.form.get('description'),\n        'ingredients': request.form.get('ingredients'),\n        'method': request.form.get('method'),\n        'cooking_time':request.form.get('cooking_time'),\n        'serving':request.form.get('serving'),\n        'author':request.form.get('author'),\n        'category_name': request.form.get('category_name'),\n        'country_of_origin': request.form.get('country_of_origin'),\n        'picture': request.form.get('picture')\n    }})\n    flash('Update successful', 'success')\n    return redirect(url_for('get_recipes'))\n\n\n# function to delete recipe\n@app.route('/delete_recipe/<recipe_id>')\ndef delete_recipe(recipe_id):\n    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})\n    flash('Deleted','success')\n    return redirect(url_for('get_recipes'))\n\n\n\n#function for users to insert likes\n@app.route('/like_recipe/<recipe_id>')\ndef like_recipe(recipe_id):\n    likerecipes = mongo.db.recipes\n    likerecipes.update({\"_id\": ObjectId(recipe_id)}, { '$inc': {'likes': 1}})\n    return redirect(url_for('view_recipe', recipe_id=recipe_id))\n\n\n\n# function to insert recipe in the database\n@app.route('/signup', methods=['GET','POST'])\ndef signup():\n    form = RegistrationForm(request.form)\n    if request.method == 'POST' and form.validate():\n        form_data = form.data\n        form_data['password'] = bcrypt.generate_password_hash(str(form.password.data).encode('utf-8'))\n    \n        users = mongo.db.users\n        users.insert_one(form_data)\n        flash('Registration successful!', 'success')\n        return redirect(url_for('home'))\n    return render_template('signup.html', title='Register', form=form)\n\n\n\n# function to login users\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if current_user.is_authenticated:\n        return redirect(url_for('home'))\n    form = LoginForm()\n    if form.validate_on_submit():\n        user = mongo.db.users.find_one({'email': form.email.data})\n        if user and bcrypt.check_password_hash(user ['password'], form.password.data):\n            session['user'] = user['username']\n            flash('You have been logged in!', 'success')\n            return redirect(url_for('home'))\n      \n        if user is None:\n            flash('Login Unsuccessful. Please check your login details', 'danger')\n            return render_template('login.html', form=form)\n    \n    return render_template('login.html', title='login', form=form)\n\n\n\n#Categories \n@app.route('/breakfast_recipes')\ndef breakfast_recipes():\n    recipe = mongo.db.recipes\n    brkrecipes = recipe.find({\"category_name\": \"Breakfast\"})\n    return render_template('breakfast.html', recipes=brkrecipes)\n    \n@app.route('/brunch_recipes')\ndef brunch_recipes():\n    recipe = mongo.db.recipes\n    brnchrecipes = recipe.find({\"category_name\": \"Brunch\"})\n    return render_template('brunch.html', recipes=brnchrecipes)\n\n@app.route('/lunch_recipes')\ndef lunch_recipes():\n    recipe = mongo.db.recipes\n    lunchrecipes = recipe.find({\"category_name\": \"Lunch\"})\n    return render_template('lunch.html', recipes=lunchrecipes)\n    \n@app.route('/dinner_recipes')\ndef dinner_recipes():\n    recipe = mongo.db.recipes\n    dinnerrecipes = recipe.find({\"category_name\": \"Dinner\"})\n    return render_template('dinner.html', recipes=dinnerrecipes)\n\n@app.route('/dessert_recipes')\ndef dessert_recipes():\n    recipe = mongo.db.recipes\n    dessertrecipes = recipe.find({\"category_name\": \"Dessert\"})\n    return render_template('dessert.html', recipes=dessertrecipes)\n\n@app.route('/starter_recipes')\ndef starter_recipes():\n    recipe = mongo.db.recipes\n    starterrecipes = recipe.find({\"category_name\": \"Starters\"})\n    return render_template('starters.html', recipes=starterrecipes)\n    \n@app.route('/sidedish_recipes')\ndef sidedish_recipes():\n    recipe = mongo.db.recipes\n    sidedishrecipes = recipe.find({\"category_name\": \"Side Dish\"})\n    return render_template('sidedish.html', recipes=sidedishrecipes)\n    \n@app.route('/snack_recipes')\ndef snack_recipes():\n    recipe = mongo.db.recipes\n    snackrecipes = recipe.find({\"category_name\": \"Snack\"})\n    return render_template('snack.html', recipes=snackrecipes)   \n    \n\nif __name__ == '__main__':\n    \n    app.run(host=os.environ.get('IP'),\n            port=int(os.environ.get('PORT')),\n            debug=True)","undoManager":{"mark":1,"position":19,"stack":[[{"start":{"row":120,"column":6},"end":{"row":120,"column":7},"action":"remove","lines":["e"],"id":993},{"start":{"row":120,"column":5},"end":{"row":120,"column":6},"action":"remove","lines":["f"]},{"start":{"row":120,"column":4},"end":{"row":120,"column":5},"action":"remove","lines":["i"]},{"start":{"row":120,"column":0},"end":{"row":120,"column":4},"action":"remove","lines":["    "]},{"start":{"row":119,"column":72},"end":{"row":120,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":119,"column":4},"end":{"row":119,"column":19},"action":"remove","lines":["deleterecipe = "],"id":994}],[{"start":{"row":77,"column":30},"end":{"row":78,"column":0},"action":"insert","lines":["",""],"id":995},{"start":{"row":78,"column":0},"end":{"row":78,"column":4},"action":"insert","lines":["    "]},{"start":{"row":78,"column":4},"end":{"row":78,"column":5},"action":"insert","lines":["i"]},{"start":{"row":78,"column":5},"end":{"row":78,"column":6},"action":"insert","lines":["f"]}],[{"start":{"row":78,"column":6},"end":{"row":78,"column":7},"action":"insert","lines":[" "],"id":996}],[{"start":{"row":78,"column":7},"end":{"row":78,"column":8},"action":"insert","lines":["f"],"id":997},{"start":{"row":78,"column":8},"end":{"row":78,"column":9},"action":"insert","lines":["o"]}],[{"start":{"row":78,"column":9},"end":{"row":78,"column":10},"action":"insert","lines":["r"],"id":998},{"start":{"row":78,"column":10},"end":{"row":78,"column":11},"action":"insert","lines":["m"]}],[{"start":{"row":78,"column":11},"end":{"row":78,"column":12},"action":"insert","lines":["_"],"id":999}],[{"start":{"row":78,"column":12},"end":{"row":78,"column":13},"action":"insert","lines":["d"],"id":1000},{"start":{"row":78,"column":13},"end":{"row":78,"column":14},"action":"insert","lines":["a"]},{"start":{"row":78,"column":14},"end":{"row":78,"column":15},"action":"insert","lines":["t"]}],[{"start":{"row":78,"column":15},"end":{"row":78,"column":16},"action":"insert","lines":["a"],"id":1001}],[{"start":{"row":78,"column":16},"end":{"row":78,"column":17},"action":"insert","lines":[" "],"id":1002},{"start":{"row":78,"column":17},"end":{"row":78,"column":18},"action":"insert","lines":["i"]},{"start":{"row":78,"column":18},"end":{"row":78,"column":19},"action":"insert","lines":["s"]}],[{"start":{"row":78,"column":19},"end":{"row":78,"column":20},"action":"insert","lines":[" "],"id":1003},{"start":{"row":78,"column":20},"end":{"row":78,"column":21},"action":"insert","lines":["n"]},{"start":{"row":78,"column":21},"end":{"row":78,"column":22},"action":"insert","lines":["o"]}],[{"start":{"row":78,"column":22},"end":{"row":78,"column":23},"action":"insert","lines":["n"],"id":1004},{"start":{"row":78,"column":23},"end":{"row":78,"column":24},"action":"insert","lines":["e"]}],[{"start":{"row":78,"column":24},"end":{"row":79,"column":0},"action":"insert","lines":["",""],"id":1005},{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"remove","lines":["    "],"id":1006},{"start":{"row":78,"column":24},"end":{"row":79,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":78,"column":24},"end":{"row":78,"column":25},"action":"insert","lines":[":"],"id":1007}],[{"start":{"row":78,"column":25},"end":{"row":79,"column":0},"action":"insert","lines":["",""],"id":1008},{"start":{"row":79,"column":0},"end":{"row":79,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":78,"column":20},"end":{"row":78,"column":21},"action":"remove","lines":["n"],"id":1009},{"start":{"row":78,"column":20},"end":{"row":78,"column":21},"action":"insert","lines":["N"]}],[{"start":{"row":79,"column":4},"end":{"row":79,"column":8},"action":"remove","lines":["    "],"id":1010},{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"remove","lines":["    "]},{"start":{"row":78,"column":25},"end":{"row":79,"column":0},"action":"remove","lines":["",""]},{"start":{"row":78,"column":24},"end":{"row":78,"column":25},"action":"remove","lines":[":"]},{"start":{"row":78,"column":23},"end":{"row":78,"column":24},"action":"remove","lines":["e"]},{"start":{"row":78,"column":22},"end":{"row":78,"column":23},"action":"remove","lines":["n"]},{"start":{"row":78,"column":21},"end":{"row":78,"column":22},"action":"remove","lines":["o"]},{"start":{"row":78,"column":20},"end":{"row":78,"column":21},"action":"remove","lines":["N"]},{"start":{"row":78,"column":19},"end":{"row":78,"column":20},"action":"remove","lines":[" "]}],[{"start":{"row":78,"column":18},"end":{"row":78,"column":19},"action":"remove","lines":["s"],"id":1011},{"start":{"row":78,"column":17},"end":{"row":78,"column":18},"action":"remove","lines":["i"]},{"start":{"row":78,"column":16},"end":{"row":78,"column":17},"action":"remove","lines":[" "]},{"start":{"row":78,"column":15},"end":{"row":78,"column":16},"action":"remove","lines":["a"]},{"start":{"row":78,"column":14},"end":{"row":78,"column":15},"action":"remove","lines":["t"]},{"start":{"row":78,"column":13},"end":{"row":78,"column":14},"action":"remove","lines":["a"]},{"start":{"row":78,"column":12},"end":{"row":78,"column":13},"action":"remove","lines":["d"]},{"start":{"row":78,"column":11},"end":{"row":78,"column":12},"action":"remove","lines":["_"]},{"start":{"row":78,"column":10},"end":{"row":78,"column":11},"action":"remove","lines":["m"]},{"start":{"row":78,"column":9},"end":{"row":78,"column":10},"action":"remove","lines":["r"]},{"start":{"row":78,"column":8},"end":{"row":78,"column":9},"action":"remove","lines":["o"]},{"start":{"row":78,"column":7},"end":{"row":78,"column":8},"action":"remove","lines":["f"]},{"start":{"row":78,"column":6},"end":{"row":78,"column":7},"action":"remove","lines":[" "]},{"start":{"row":78,"column":5},"end":{"row":78,"column":6},"action":"remove","lines":["f"]},{"start":{"row":78,"column":4},"end":{"row":78,"column":5},"action":"remove","lines":["i"]}],[{"start":{"row":78,"column":0},"end":{"row":78,"column":4},"action":"remove","lines":["    "],"id":1012},{"start":{"row":77,"column":30},"end":{"row":78,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":994,"scrollleft":0,"selection":{"start":{"row":77,"column":30},"end":{"row":77,"column":30},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1562714068304}